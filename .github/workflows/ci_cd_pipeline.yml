name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]  
  pull_request:
    branches: [ main, master ] 

permissions:
  contents: read
  packages: write

jobs:
  testing-job:
    name: Testes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instalar Poetry
        run: pip install poetry

      - name: Instalar dependências com Poetry
        run: poetry install --no-interaction --no-root

      - name: Executar testes com cobertura
        run: poetry run pytest --cov=app --cov-report=xml --junitxml=test-results.xml

  linting-job:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instalar Poetry
        run: pip install poetry

      - name: Instalar dependências com Poetry
        run: poetry install --no-interaction --no-root

      - name: Verificar código com flake8
        run: poetry run flake8 app/

      - name: Verificar formatação com Black
        run: poetry run black --check app/

      - name: Verificar organização dos imports com isort
        run: poetry run isort --check-only app/

  build-job:
    name: Build da Imagem Docker
    runs-on: ubuntu-latest
    needs: [testing-job, linting-job]

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build da imagem Docker
        run: |
          docker build \
            --tag my-app:${{ github.sha }} \
            --tag my-app:latest \
            .

      - name: Salvar imagem como artefato
        run: docker save my-app:latest -o app.tar

      - name: Upload da imagem Docker
        uses: actions/upload-artifact@v3
        with:
          name: app-image
          path: app.tar

  run-built-image:
    name: Rodar Imagem Docker Localmente
    runs-on: ubuntu-latest
    needs: build-job

    steps:
      - name: Baixar imagem Docker do artefato
        uses: actions/upload-artifact@v3
        with:
          name: app-image

      - name: Carregar imagem Docker
        run: docker load -i app.tar

      - name: Executar container da aplicação
        run: |
          docker run -d -p 8080:8000 --name my-running-app my-app:latest